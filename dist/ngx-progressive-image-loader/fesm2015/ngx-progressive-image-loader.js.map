{"version":3,"file":"ngx-progressive-image-loader.js.map","sources":["ng://ngx-progressive-image-loader/lib/config.ts","ng://ngx-progressive-image-loader/lib/configuration.service.ts","ng://ngx-progressive-image-loader/lib/util.ts","ng://ngx-progressive-image-loader/lib/progressive-image-loader/progressive-image-loader.component.ts","ng://ngx-progressive-image-loader/lib/image-placeholder/image-placeholder.component.ts","ng://ngx-progressive-image-loader/lib/progressive-image/progressive-image.directive.ts","ng://ngx-progressive-image-loader/lib/ngx-progressive-image-loader.module.ts"],"sourcesContent":["import { InjectionToken } from '@angular/core';\n\nexport interface IImageLoaderOptions extends IntersectionObserverInit {\n  placeholderImageSrc?: string;\n  imageRatio: number;\n  filter: string;\n}\nexport const IMAGE_LOADER_CONFIG_TOKEN = new InjectionToken<IImageLoaderOptions>(\n  'Image loader Config'\n);\n\nexport const DEFAULT_IMAGE_LOADER_OPTIONS = <IImageLoaderOptions>{\n  // root?: Element | null;\n  rootMargin: '10px',\n  threshold: 0.1,\n  imageRatio: 16 / 9,\n  placeholderImageSrc: ''\n};\n","import { Inject, Injectable } from '@angular/core';\n\nimport {\n  DEFAULT_IMAGE_LOADER_OPTIONS,\n  IImageLoaderOptions,\n  IMAGE_LOADER_CONFIG_TOKEN\n} from './config';\n\n@Injectable()\nexport class ConfigurationService {\n  config: IImageLoaderOptions;\n\n  constructor(@Inject(IMAGE_LOADER_CONFIG_TOKEN) options: IImageLoaderOptions) {\n    this.setConfig(options);\n  }\n\n  setConfig(config: IImageLoaderOptions) {\n    if (config) {\n      this.config = { ...DEFAULT_IMAGE_LOADER_OPTIONS, ...config };\n    } else {\n      this.config = DEFAULT_IMAGE_LOADER_OPTIONS;\n    }\n  }\n}\n","import { Renderer2 } from '@angular/core';\n\nexport function isSupportIntersectionObserver(window) {\n  return (\n    window &&\n    'IntersectionObserver' in window &&\n    'IntersectionObserverEntry' in window &&\n    'intersectionRatio' in window.IntersectionObserverEntry.prototype\n  );\n}\n\nexport function isImagePicture(element: HTMLElement) {\n  return element instanceof HTMLImageElement || element instanceof HTMLPictureElement;\n}\n\nexport function setAttribute(\n  renderer: Renderer2,\n  attribute: string,\n  element: HTMLImageElement | HTMLSourceElement\n) {\n  renderer.setAttribute(element, attribute, element.dataset[attribute]);\n  // maybe doesn't matter\n  // renderer.removeAttribute(element, 'data-' + attribute);\n}\nexport function isPictureElement(element: HTMLElement) {\n  return element.nodeName === 'PICTURE';\n}\nexport function loadImage(renderer: Renderer2, image: HTMLImageElement) {\n  if (isPictureElement(image.parentElement)) {\n    const sourceElms = image.parentElement.children;\n    for (let index = 0; index < sourceElms.length; index++) {\n      const element = sourceElms[index];\n      if (element instanceof HTMLSourceElement) {\n        setAttribute(renderer, 'srcset', element);\n      } else if (element instanceof HTMLImageElement) {\n        setAttribute(renderer, 'src', element);\n      }\n    }\n  } else {\n    if (image.dataset.src) {\n      setAttribute(renderer, 'src', image);\n    }\n    if (image.dataset.srcset) {\n      setAttribute(renderer, 'srcset', image);\n    }\n  }\n}\n\nexport function isSpider(window) {\n  return (\n    (window && !('onscroll' in window)) ||\n    /(gle|ing|ro)bot|crawl|spider/i.test(window.navigator.userAgent)\n  );\n}\n","import { isPlatformBrowser } from '@angular/common';\nimport {\n  Component,\n  ElementRef,\n  Inject,\n  Input,\n  OnDestroy,\n  OnInit,\n  PLATFORM_ID,\n  Renderer2\n} from '@angular/core';\nimport { WINDOW } from 'ngx-window-token';\n\nimport { ConfigurationService } from '../configuration.service';\nimport { isSpider, isSupportIntersectionObserver, loadImage } from '../util';\n\n@Component({\n  selector: 'ngx-progressive-image-loader',\n  template: `\n    <ng-content></ng-content>\n  `\n})\nexport class ProgressiveImageLoaderComponent implements OnInit, OnDestroy {\n  // define the placeholder height for all images inside this components\n  @Input()\n  imageRatio: number;\n\n  @Input()\n  filter: string;\n  // the src of loading image\n  @Input()\n  placeholderImageSrc: string;\n  intersectionObserver: IntersectionObserver;\n\n  constructor(\n    element: ElementRef,\n    public _Renderer: Renderer2,\n    public _ConfigurationService: ConfigurationService,\n    @Inject(PLATFORM_ID) private platformId: any,\n    @Inject(WINDOW) private window: any\n  ) {}\n\n  ngOnInit() {\n    if (\n      isSupportIntersectionObserver(this.window) &&\n      !isSpider(this.window) &&\n      isPlatformBrowser(this.platformId)\n    ) {\n      if (!this.imageRatio) {\n        this.imageRatio = this._ConfigurationService.config.imageRatio;\n      }\n\n      if (!this.filter) {\n        this.filter = this._ConfigurationService.config.filter;\n      }\n      if (!this.placeholderImageSrc) {\n        this.placeholderImageSrc = this._ConfigurationService.config.placeholderImageSrc;\n      }\n      this.intersectionObserver = new IntersectionObserver(\n        this.onIntersectionChanged.bind(this),\n        this._ConfigurationService.config\n      );\n    }\n  }\n\n  onIntersectionChanged(entries: IntersectionObserverEntry[], observer: IntersectionObserver) {\n    entries.forEach(\n      entry =>\n        entry.isIntersecting &&\n        this.onImageAppearsInViewport(entry.target as HTMLImageElement, observer)\n    );\n  }\n\n  onImageAppearsInViewport(image: HTMLImageElement, observer: IntersectionObserver) {\n    // Stop observing the current target\n    observer.unobserve(image);\n    loadImage(this._Renderer, image);\n  }\n\n  ngOnDestroy(): void {\n    this.intersectionObserver && this.intersectionObserver.disconnect();\n  }\n}\n","import { ChangeDetectionStrategy, Component, HostBinding, Input, OnInit } from '@angular/core';\nimport { DomSanitizer, SafeStyle } from '@angular/platform-browser';\n\nimport { ProgressiveImageLoaderComponent } from '../progressive-image-loader/progressive-image-loader.component';\n\n@Component({\n  selector: 'ngx-image-placeholder',\n  template: `\n    <img class=\"placeholder-loading-image\" [src]=\"safeLoadingImage\" [style.filter]=\"imageFilter\" />\n    <ng-content></ng-content>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ImagePlaceholderComponent implements OnInit {\n  @HostBinding('class')\n  class = 'ngx-image-placeholder';\n  @HostBinding('style')\n  get placeHolder(): SafeStyle {\n    return this.sanitizer.bypassSecurityTrustStyle(\n      `padding-bottom: ${100 / (this.imageRatio || this._ProgressiveImageLoader.imageRatio)}%;`\n    );\n  }\n\n  // to create a placeholder before finish loading the real image to avoid reflow\n  @Input()\n  imageRatio: number;\n  // a loading image showing before the real image is loaded\n  @Input()\n  placeholderImageSrc: string;\n\n  get imageFilter(): SafeStyle {\n    return this.sanitizer.bypassSecurityTrustStyle(`${this._ProgressiveImageLoader.filter}`);\n  }\n\n  get safeLoadingImage(): SafeStyle {\n    return this.sanitizer.bypassSecurityTrustUrl(\n      this.placeholderImageSrc || this._ProgressiveImageLoader.placeholderImageSrc\n    );\n  }\n\n  constructor(\n    private sanitizer: DomSanitizer,\n    private _ProgressiveImageLoader: ProgressiveImageLoaderComponent\n  ) {}\n\n  ngOnInit() {}\n}\n","import {\n  Directive,\n  ElementRef,\n  Inject,\n  Input,\n  OnChanges,\n  OnInit,\n  Optional,\n  Renderer2,\n  SimpleChanges\n} from '@angular/core';\nimport { WINDOW } from 'ngx-window-token';\n\nimport { ConfigurationService } from '../configuration.service';\nimport { ImagePlaceholderComponent } from '../image-placeholder/image-placeholder.component';\nimport { ProgressiveImageLoaderComponent } from '../progressive-image-loader/progressive-image-loader.component';\nimport { isPictureElement, loadImage } from '../util';\n\n@Directive({\n  // make sure the element is an image element\n  selector: 'img[ngxProgressiveImage], source[ngxProgressiveImage]'\n})\nexport class ProgressiveImageDirective implements OnInit, OnChanges {\n  _imageRatio: number;\n  // to create a placeholder before finish loading the real image to avoid reflow\n  @Input()\n  set imageRatio(value: number) {\n    this._imageRatio = value;\n  }\n  get imageRatio() {\n    return this._imageRatio || this._ProgressiveImageLoader.imageRatio;\n  }\n\n  // a loading image showing before the real image is loaded\n  _placeholderImageSrc: string;\n  @Input()\n  set placeholderImageSrc(value: string) {\n    this._placeholderImageSrc = value;\n  }\n\n  get placeholderImageSrc(): string {\n    return this._placeholderImageSrc || this._ProgressiveImageLoader.placeholderImageSrc;\n  }\n\n  @Input()\n  src: string;\n  // tslint:disable-next-line:no-input-rename\n  @Input()\n  srcset: string;\n\n  @Input()\n  noPlaceholder = false;\n  imageElement: HTMLImageElement;\n  isObserve = false;\n  constructor(\n    private _ElementRef: ElementRef,\n    public _Renderer: Renderer2,\n    @Inject(WINDOW) private window: any,\n    public _ConfigurationService: ConfigurationService,\n    @Optional()\n    @Inject(ImagePlaceholderComponent)\n    private _ImagePlaceholder: ImagePlaceholderComponent,\n    @Inject(ProgressiveImageLoaderComponent)\n    private _ProgressiveImageLoader: ProgressiveImageLoaderComponent\n  ) {}\n  ngOnInit(): void {\n    this.imageElement = this._ElementRef.nativeElement;\n    this.setDataSrc('data-src', this.src);\n    this.setDataSrc('data-srcset', this.srcset);\n    if (this._ProgressiveImageLoader.intersectionObserver) {\n      // only image element need to be observe and have onload event\n      if (this.imageElement instanceof HTMLImageElement) {\n        this.isObserve = true;\n        this._ProgressiveImageLoader.intersectionObserver.observe(this.imageElement);\n\n        this.imageElement.onload = () => {\n          this.imageElement.classList.add('loaded');\n        };\n        if (!this._ImagePlaceholder && !this.noPlaceholder) {\n          this.setPlaceholder();\n        }\n      }\n    } else {\n      // show image directly\n      loadImage(this._Renderer, this.imageElement);\n      this.imageElement.classList.add('loaded');\n    }\n  }\n  ngOnChanges(changes: SimpleChanges): void {\n    changes.src && !changes.src.isFirstChange() && this.setDataSrc('data-src', this.src);\n    changes.srcset &&\n      !changes.srcset.isFirstChange() &&\n      this.setDataSrc('data-srcset', this.srcset);\n\n    if (\n      this.isObserve &&\n      ((changes.src && !changes.src.isFirstChange()) ||\n        (changes.srcset && !changes.srcset.isFirstChange()))\n    ) {\n      this._ProgressiveImageLoader.intersectionObserver.unobserve(this.imageElement);\n      this._ProgressiveImageLoader.intersectionObserver.observe(this.imageElement);\n    }\n  }\n  setDataSrc(attr: string, value: string) {\n    value && this._Renderer.setAttribute(this.imageElement, attr, value);\n  }\n\n  setPlaceholder() {\n    const parentElement = this.imageElement.parentElement;\n    const placeholder = this.createPlaceholder(this.createPlaceholderImage());\n    if (isPictureElement(parentElement)) {\n      const pictureParent = parentElement.parentElement;\n      this.insertPlaceholder(pictureParent, parentElement, placeholder);\n    } else {\n      this.insertPlaceholder(parentElement, this.imageElement, placeholder);\n    }\n  }\n\n  insertPlaceholder(\n    parentElement: HTMLElement,\n    imagePicture: HTMLElement,\n    placeholder: HTMLElement\n  ) {\n    parentElement.insertBefore(placeholder, imagePicture);\n    placeholder.style.paddingBottom = `${100 / this.imageRatio}%`;\n    placeholder.appendChild(imagePicture);\n  }\n\n  createPlaceholder(placeholderImage: HTMLImageElement) {\n    const placeholder = document.createElement('div');\n    placeholder.classList.add('ngx-image-placeholder');\n    placeholder.appendChild(placeholderImage);\n    return placeholder;\n  }\n\n  createPlaceholderImage() {\n    const img = new Image();\n    img.classList.add('placeholder-loading-image');\n    img.style.filter = this._ProgressiveImageLoader.filter;\n    img.src = this.placeholderImageSrc;\n    return img;\n  }\n}\n","import { ModuleWithProviders, NgModule } from '@angular/core';\n\nimport { IImageLoaderOptions, IMAGE_LOADER_CONFIG_TOKEN } from './config';\nimport { ConfigurationService } from './configuration.service';\nimport { ImagePlaceholderComponent } from './image-placeholder/image-placeholder.component';\nimport { ProgressiveImageLoaderComponent } from './progressive-image-loader/progressive-image-loader.component';\nimport { ProgressiveImageDirective } from './progressive-image/progressive-image.directive';\n\nexport function ConfigurationServiceFactory(options: IImageLoaderOptions) {\n  return new ConfigurationService(options);\n}\n@NgModule({\n  imports: [],\n  declarations: [\n    ProgressiveImageLoaderComponent,\n    ProgressiveImageDirective,\n    ImagePlaceholderComponent\n  ],\n  exports: [ProgressiveImageLoaderComponent, ProgressiveImageDirective, ImagePlaceholderComponent]\n})\nexport class NgxProgressiveImageLoaderModule {\n  public static forRoot(config?: IImageLoaderOptions): ModuleWithProviders {\n    return {\n      ngModule: NgxProgressiveImageLoaderModule,\n      providers: [\n        { provide: IMAGE_LOADER_CONFIG_TOKEN, useValue: config },\n        {\n          provide: ConfigurationService,\n          useFactory: ConfigurationServiceFactory,\n          deps: [IMAGE_LOADER_CONFIG_TOKEN]\n        }\n      ]\n    };\n  }\n}\n"],"names":[],"mappings":"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"}
